{"version":3,"sources":["views/Reviews.js","views/Reviews.module.css"],"names":["Reviews","movieId","useState","reviews","setReviews","Status","IDLE","status","setStatus","error","setError","useEffect","PENDING","moviesAPI","then","results","RESOLVED","catch","REJECTED","className","s","list","length","map","review","item","author","toUpperCase","profile_path","image","src","avatar_path","alt","name","content","id","module","exports"],"mappings":"mPAMe,SAASA,EAAT,GAA+B,IAAZC,EAAW,EAAXA,QAAW,EACbC,mBAAS,IADI,mBACpCC,EADoC,KAC3BC,EAD2B,OAEfF,mBAASG,IAAOC,MAFD,mBAEpCC,EAFoC,KAE5BC,EAF4B,OAGjBN,mBAAS,IAHQ,mBAGpCO,EAHoC,KAG7BC,EAH6B,KAkB3C,OAdAC,qBAAU,WACRH,EAAUH,IAAOO,SAEjBC,IACqBZ,GAClBa,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACPX,EAAWW,GACXP,EAAUH,IAAOW,aAElBC,OAAM,SAAAR,GACLC,EAASD,GACTD,EAAUH,IAAOa,eAEpB,CAACjB,IAEF,qCACGM,IAAWF,IAAOO,SAAW,uDAC7BL,IAAWF,IAAOa,UAAY,4BAAIT,IAElCF,IAAWF,IAAOW,UACjB,qBAAIG,UAAWC,IAAEC,KAAjB,UACsB,IAAnBlB,EAAQmB,QAAgB,sEACxBnB,EAAQoB,KAAI,SAAAC,GAAM,OACjB,qBAAoBL,UAAWC,IAAEK,KAAjC,oBAEE,sBAAMN,UAAWC,IAAEM,OAAnB,SAA4BF,EAAOE,OAAOC,gBACzCH,EAAOI,cACN,qBACET,UAAWC,IAAES,MACbC,IAAG,yCAAoCN,EAAOO,aAC9CC,IAAKR,EAAOS,OAGhB,mBAAGd,UAAWC,IAAEc,QAAhB,SAA0BV,EAAOU,YAV1BV,EAAOW,e,mBChC5BC,EAAOC,QAAU,CAAC,KAAO,sBAAsB,KAAO,sBAAsB,QAAU","file":"static/js/Reviews.a3e09194.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport * as moviesAPI from '../services/movie-api';\r\nimport Status from '../services/Status';\r\nimport s from '../views/Reviews.module.css';\r\nexport default function Reviews({ movieId }) {\r\n  const [reviews, setReviews] = useState([]);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [error, setError] = useState('');\r\n  useEffect(() => {\r\n    setStatus(Status.PENDING);\r\n\r\n    moviesAPI\r\n      .fetchMovieReviews(movieId)\r\n      .then(({ results }) => {\r\n        setReviews(results);\r\n        setStatus(Status.RESOLVED);\r\n      })\r\n      .catch(error => {\r\n        setError(error);\r\n        setStatus(Status.REJECTED);\r\n      });\r\n  }, [movieId]);\r\n  return (\r\n    <>\r\n      {status === Status.PENDING && <p>Download movie reviews</p>}\r\n      {status === Status.REJECTED && <p>{error}</p>}\r\n\r\n      {status === Status.RESOLVED && (\r\n        <ul className={s.list}>\r\n          {reviews.length === 0 && <p>There is no one review for this movie</p>}\r\n          {reviews.map(review => (\r\n            <li key={review.id} className={s.item}>\r\n              Author:\r\n              <span className={s.author}>{review.author.toUpperCase()}</span>\r\n              {review.profile_path && (\r\n                <img\r\n                  className={s.image}\r\n                  src={`https://image.tmdb.org/t/p/w200${review.avatar_path}`}\r\n                  alt={review.name}\r\n                />\r\n              )}\r\n              <p className={s.content}>{review.content}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\nReviews.propTypes = {\r\n  movieId: PropTypes.string,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Reviews_list__cddpd\",\"item\":\"Reviews_item__F49aH\",\"content\":\"Reviews_content__2-fx6\"};"],"sourceRoot":""}